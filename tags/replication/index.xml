<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>replication on Sometimes we write something:)</title>
    <link>http://localhost:888/tags/replication/</link>
    <description>Recent content in replication on Sometimes we write something:)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 25 Jun 2012 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost:888/tags/replication/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Replication, Durability, and Disaster Recovery</title>
      <link>http://localhost:888/presentation/replication-durability-and-disaster-recovery/</link>
      <pubDate>Mon, 25 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:888/presentation/replication-durability-and-disaster-recovery/</guid>
      <description>This session introduces the basic components of high availability before going into a deep dive on MongoDB replication. We’ll explore some of the advanced capabilities with MongoDB replication and best practices to ensure data durability and redundancy. We’ll also look at various deployment scenarios and disaster recovery configurations.
Replication, Durability, and Disaster Recovery
View more presentations from Steve Francia</description>
    </item>
    
    <item>
      <title>Backup, Replication and Disaster Recovery</title>
      <link>http://localhost:888/post/backups-replication-and-disaster-recovery/</link>
      <pubDate>Wed, 11 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:888/post/backups-replication-and-disaster-recovery/</guid>
      <description>&amp;lt;img src=&amp;quot;/media/disaster_day_of_crisis.jpg&amp;quot; alt=&amp;quot;crisis&amp;quot; /&amp;gt;  One of the most common concerns people have is how to ensure that their application is safe, secure and available in the event of an emergency. Often I have found that people are mistakenly believe that they are protected when in fact they often have ignored potential scenarios.
The principles explained apply equally well in RDBMSs, MongoDB and other databases.
Potential scenarios to protect against   Drive failure   Machine failure   Switch failure   Power circuit failure   Data center failure   Intrusion   Fat fingers   Programmer error   Raid To prevent drive failure use multiple drives in a single machine for high availability.</description>
    </item>
    
  </channel>
</rss>