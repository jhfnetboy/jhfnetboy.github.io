<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Symfony2 on Sometimes we write something:)</title>
    <link>http://localhost:888/tags/Symfony2/</link>
    <description>Recent content in Symfony2 on Sometimes we write something:)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 20 Jun 2011 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost:888/tags/Symfony2/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Creating a Symfony2 Console Command</title>
      <link>http://localhost:888/post/creating-a-symfony2-console-command/</link>
      <pubDate>Mon, 20 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:888/post/creating-a-symfony2-console-command/</guid>
      <description>&amp;lt;img src=&amp;quot;/media/symfony_ss.png&amp;quot; alt=&amp;quot;symfony&amp;quot; /&amp;gt;  One of the weaknesses of PHP as a languages has always been it’s ability to write proper command line utilities. Yes PHP is pretty much built to drive the web, and it does that rather well, but there are plenty of reasons to want to be able to write a program that is callable from the command line that interfaces with your web app. Symfony2 does a rather good job at providing a nice toolset to build command line applications in php.</description>
    </item>
    
    <item>
      <title>Blending Mongo and RDBMS for ecommerce</title>
      <link>http://localhost:888/presentation/blending-mongo-and-rdbms-for-ecommerce/</link>
      <pubDate>Thu, 09 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:888/presentation/blending-mongo-and-rdbms-for-ecommerce/</guid>
      <description>Justin Hileman and I presented at MongoNYC 2011 to a packed house. Our presentation outlines both why someone would want to use MongoDB for ecommerce and how we overcame some of it’s limitations by incorporating mysql into our infrastructure.
 &amp;lt;img src=&amp;quot;/media/l6zwy.jpg&amp;quot; /&amp;gt; &amp;lt;figcaption&amp;gt; &amp;lt;h4&amp;gt;Presenting at MongoNYC 2011&amp;lt;/h4&amp;gt; &amp;lt;/figcaption&amp;gt;  Blending MongoDB and RDBMS for ecommerce
View more presentations from Steve Francia.</description>
    </item>
    
    <item>
      <title>Creating your own Symfony2 Bundle</title>
      <link>http://localhost:888/post/creating-your-own-symfony2-bundle/</link>
      <pubDate>Tue, 24 May 2011 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:888/post/creating-your-own-symfony2-bundle/</guid>
      <description>&amp;lt;img src=&amp;quot;/media/symfony_ss.png&amp;quot; alt=&amp;quot;symfony&amp;quot; /&amp;gt;  Symfony2 is a great web framework. OpenSky is built on this framework and we are one of the largest contributors to it. The primary building block for Symfony2 is a bundle. Through it’s bundle system Symfony 2.0 achieves a level of modularity I haven’t seen in other web frameworks. A bundle permits a developer to add functionality to the framework and is the best way to develop applications with Symfony2.</description>
    </item>
    
    <item>
      <title>Getting Started with Symfony2</title>
      <link>http://localhost:888/post/getting-started-with-symfony2/</link>
      <pubDate>Mon, 07 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:888/post/getting-started-with-symfony2/</guid>
      <description>&amp;lt;img src=&amp;quot;/media/symfony_ss.png&amp;quot; alt=&amp;quot;symfony&amp;quot; /&amp;gt;  In a follow up to my popular post on Symfony2, the open source PHP framework we use at OpenSky, I’m providing an easy guide to getting started using Symfony2. This isn’t your basic “Hello World”, but a practical guide to beginning a project with Symfony2.
Requirements To get started with Symfony2 you should have a working install of Git as well as a well made install of PHP version 5.</description>
    </item>
    
    <item>
      <title>On Symfony2</title>
      <link>http://localhost:888/post/symfony2/</link>
      <pubDate>Tue, 01 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:888/post/symfony2/</guid>
      <description>&amp;lt;img src=&amp;quot;/media/symfony_ss.png&amp;quot; alt=&amp;quot;symfony&amp;quot; /&amp;gt;  Disclaimer I’ve got a couple disclaimers in writing this. 1. I’m one of the primary authors of the Zoop Framework for PHP. It’s pretty much the first web framework for PHP dating back to 2001. In spite of it’s age it’s still quite relevant and in use by thousands worldwide. 2. I run engineering for OpenSky where we elected to build our ecommerce platform on the Symfony2 framework and have since become the 2nd largest contributors to it.</description>
    </item>
    
    <item>
      <title>Next Gen PHP Frameworks</title>
      <link>http://localhost:888/post/next-gen-php-frameworks/</link>
      <pubDate>Fri, 02 Apr 2010 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:888/post/next-gen-php-frameworks/</guid>
      <description>With the release of PHP 5.3, PHP released the most significant capabilities in years. Specifically the addition of Late Static Bindings, Lambda Functions and Closures, and Namespaces has changed everything. These new features open new doors for solutions previously impossible. As a result in recent months there has been a flood of new frameworks and libraries taking advantage of these new features. Effectively we are approaching the third wave of PHP frameworks.</description>
    </item>
    
  </channel>
</rss>